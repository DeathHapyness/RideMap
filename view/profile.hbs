{{!-- Sidebar para navegação --}}
{{> sidebar}}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4>Meu Perfil</h4>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <img id="perfilAvatar" src="{{#if user.avatar}}{{user.avatar}}{{else}}/static/img/default-avatar.jpg{{/if}}" 
                             class="rounded-circle mb-3" alt="Avatar" width="150" height="150">
                        <div>
                            <input type="file" id="perfilAvatarInput" accept="image/*" style="display: none;">
                            <button class="btn btn-outline-primary" id="btnTrocarAvatar">
                                <i class="fas fa-camera me-2"></i>Trocar Foto
                            </button>
                        </div>
                    </div>

                    <form id="profileForm">
                        <div class="mb-3">
                            <label for="perfilNome" class="form-label">Nome/Apelido</label>
                            <input type="text" class="form-control" id="perfilNome" value="{{user.nome}}">
                        </div>
                        <div class="mb-3">
                            <label for="perfilEmail" class="form-label">Email</label>
                            <input type="email" class="form-control" id="perfilEmail" value="{{user.email}}" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="perfilDataCadastro" class="form-label">Data de Cadastro</label>
                            <input type="text" class="form-control" id="perfilDataCadastro" value="{{formatDate user.data_cadastro}}" readonly>
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" id="btnSalvarPerfil">
                                <i class="fas fa-save me-2"></i>Salvar Alterações
                            </button>
                            <button type="button" class="btn btn-outline-danger" id="btnDeletarConta">
                                <i class="fas fa-trash-alt me-2"></i>Deletar Conta
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header">
                    <h4>Alterar Senha</h4>
                </div>
                <div class="card-body">
                    <form id="passwordForm">
                        <div class="mb-3">
                            <label for="senhaAtual" class="form-label">Senha Atual</label>
                            <input type="password" class="form-control" id="senhaAtual" required>
                        </div>
                        <div class="mb-3">
                            <label for="novaSenha" class="form-label">Nova Senha</label>
                            <input type="password" class="form-control" id="novaSenha" required>
                        </div>
                        <div class="mb-3">
                            <label for="confirmarSenha" class="form-label">Confirmar Nova Senha</label>
                            <input type="password" class="form-control" id="confirmarSenha" required>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-key me-2"></i>Alterar Senha
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

{{!-- Scripts específicos do perfil --}}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Manipulação da foto de perfil
    const btnTrocarAvatar = document.getElementById('btnTrocarAvatar');
    const perfilAvatarInput = document.getElementById('perfilAvatarInput');
    const perfilAvatar = document.getElementById('perfilAvatar');

    btnTrocarAvatar.addEventListener('click', () => {
        perfilAvatarInput.click();
    });

    perfilAvatarInput.addEventListener('change', async (e) => {
        const file = e.target.files[0];
        if (file) {
            const formData = new FormData();
            formData.append('avatar', file);

            try {
                const response = await fetch('/auth/api/user/avatar', {
                    method: 'PUT',
                    body: formData
                });

                const data = await response.json();
                if (data.success) {
                    perfilAvatar.src = `/uploads/avatars/${data.avatar}`;
                    Swal.fire('Sucesso', 'Foto de perfil atualizada!', 'success');
                }
            } catch (error) {
                Swal.fire('Erro', 'Erro ao atualizar foto de perfil', 'error');
            }
        }
    });

    // Atualização do perfil
    const profileForm = document.getElementById('profileForm');
    profileForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const nome = document.getElementById('perfilNome').value;

        try {
            const response = await fetch('/auth/api/user/profile', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ nome })
            });

            const data = await response.json();
            if (data.success) {
                Swal.fire('Sucesso', 'Perfil atualizado com sucesso!', 'success');
            }
        } catch (error) {
            Swal.fire('Erro', 'Erro ao atualizar perfil', 'error');
        }
    });

    // Alteração de senha
    const passwordForm = document.getElementById('passwordForm');
    passwordForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const senhaAtual = document.getElementById('senhaAtual').value;
        const novaSenha = document.getElementById('novaSenha').value;
        const confirmarSenha = document.getElementById('confirmarSenha').value;

        if (novaSenha !== confirmarSenha) {
            Swal.fire('Erro', 'As senhas não coincidem', 'error');
            return;
        }

        try {
            const response = await fetch('/auth/api/user/change-password', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ senhaAtual, novaSenha })
            });

            const data = await response.json();
            if (data.success) {
                Swal.fire('Sucesso', 'Senha alterada com sucesso!', 'success');
                passwordForm.reset();
            }
        } catch (error) {
            Swal.fire('Erro', 'Erro ao alterar senha', 'error');
        }
    });

    // Deletar conta
    const btnDeletarConta = document.getElementById('btnDeletarConta');
    btnDeletarConta.addEventListener('click', () => {
        Swal.fire({
            title: 'Tem certeza?',
            text: "Esta ação não pode ser desfeita!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sim, deletar conta',
            cancelButtonText: 'Cancelar'
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch('/auth/api/user/account', {
                        method: 'DELETE'
                    });

                    const data = await response.json();
                    if (data.success) {
                        Swal.fire(
                            'Conta Deletada!',
                            'Sua conta foi deletada com sucesso.',
                            'success'
                        ).then(() => {
                            window.location.href = '/';
                        });
                    }
                } catch (error) {
                    Swal.fire('Erro', 'Erro ao deletar conta', 'error');
                }
            }
        });
    });
});
</script>